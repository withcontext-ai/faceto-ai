# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Main Golang Deploy Codecov

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install alsa and related packages
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
          ca-certificates  \
          netbase \
          ffmpeg \
          libasound2-dev \
          && sudo rm -rf /var/lib/apt/lists/ \
          && sudo apt-get autoremove -y && sudo apt-get autoclean -y

      - name: Build
        run: |
          cd server
          make build

      - name: Test
        run: |
          cd server
          go test -coverprofile=../coverage.out -covermode=atomic ./...

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.out