// Code generated by entimport, DO NOT EDIT.

package schema

import (
	"entgo.io/ent"
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/field"
)

type Link struct {
	ent.Schema
}

const (
	Duration = 10 * 60
	Greeting = "Hello, How can I assist you?"
)

type RoomConfig struct {
	Duration uint32 `json:"duration"`           // this interview total duration, Unit: second
	Greeting string `json:"greeting"`           // The closing statement of the interview
	VoiceID  string `json:"voice_id,omitempty"` // Room VoiceID
	UserName string `json:"username,omitempty"` // Login Username
	BotName  string `json:"botname,omitempty"`  // Bot Name
}

type Webhook struct {
	Api string `json:"api"`
	Key string `json:"key"`
}

func (w *Webhook) GetAPI() string {
	if w.Api == "" {
		return ""
	}
	return w.Api
}

func (w *Webhook) GetKey() string {
	if w.Key == "" {
		return ""
	}
	return w.Key
}

type Prompt struct {
	Role     string   `json:"role"`
	Question []string `json:"question"`
}

func (Link) Fields() []ent.Field {
	return []ent.Field{
		field.Uint64("id"),
		field.String("room_name").Default(""),
		field.String("link").Default("").Optional(),
		field.String("chat_api").Default("").Optional(),
		field.String("chat_api_key").Default("").Optional(),
		field.String("token").Default("").Optional(),
		field.JSON("config", &RoomConfig{}).Optional(),
		field.JSON("webhook", &Webhook{}).Optional(),
		field.JSON("prompt", &Prompt{}).Optional(),
	}
}

func (Link) Edges() []ent.Edge {
	return []ent.Edge{}
}

func (Link) Annotations() []schema.Annotation {
	return []schema.Annotation{entsql.Annotation{Table: "link"}}
}

func (Link) Mixin() []ent.Mixin {
	return []ent.Mixin{
		UUIDMixin{},
		TimeMixin{},
	}
}
