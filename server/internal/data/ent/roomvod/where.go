// Code generated by ent, DO NOT EDIT.

package roomvod

import (
	"faceto-ai/internal/data/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldID, id))
}

// UUID applies equality check predicate on the "uuid" field. It's identical to UUIDEQ.
func UUID(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldUUID, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldDeletedAt, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldName, v))
}

// Sid applies equality check predicate on the "sid" field. It's identical to SidEQ.
func Sid(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldSid, v))
}

// EgressID applies equality check predicate on the "egress_id" field. It's identical to EgressIDEQ.
func EgressID(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldEgressID, v))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldStatus, v))
}

// Platform applies equality check predicate on the "platform" field. It's identical to PlatformEQ.
func Platform(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldPlatform, v))
}

// VodType applies equality check predicate on the "vod_type" field. It's identical to VodTypeEQ.
func VodType(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldVodType, v))
}

// VodPath applies equality check predicate on the "vod_path" field. It's identical to VodPathEQ.
func VodPath(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldVodPath, v))
}

// VodURL applies equality check predicate on the "vod_url" field. It's identical to VodURLEQ.
func VodURL(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldVodURL, v))
}

// StartTime applies equality check predicate on the "start_time" field. It's identical to StartTimeEQ.
func StartTime(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldStartTime, v))
}

// CompleteTime applies equality check predicate on the "complete_time" field. It's identical to CompleteTimeEQ.
func CompleteTime(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldCompleteTime, v))
}

// Duration applies equality check predicate on the "duration" field. It's identical to DurationEQ.
func Duration(v uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldDuration, v))
}

// UUIDEQ applies the EQ predicate on the "uuid" field.
func UUIDEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldUUID, v))
}

// UUIDNEQ applies the NEQ predicate on the "uuid" field.
func UUIDNEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldUUID, v))
}

// UUIDIn applies the In predicate on the "uuid" field.
func UUIDIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldUUID, vs...))
}

// UUIDNotIn applies the NotIn predicate on the "uuid" field.
func UUIDNotIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldUUID, vs...))
}

// UUIDGT applies the GT predicate on the "uuid" field.
func UUIDGT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldUUID, v))
}

// UUIDGTE applies the GTE predicate on the "uuid" field.
func UUIDGTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldUUID, v))
}

// UUIDLT applies the LT predicate on the "uuid" field.
func UUIDLT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldUUID, v))
}

// UUIDLTE applies the LTE predicate on the "uuid" field.
func UUIDLTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldUUID, v))
}

// UUIDContains applies the Contains predicate on the "uuid" field.
func UUIDContains(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContains(FieldUUID, v))
}

// UUIDHasPrefix applies the HasPrefix predicate on the "uuid" field.
func UUIDHasPrefix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasPrefix(FieldUUID, v))
}

// UUIDHasSuffix applies the HasSuffix predicate on the "uuid" field.
func UUIDHasSuffix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasSuffix(FieldUUID, v))
}

// UUIDEqualFold applies the EqualFold predicate on the "uuid" field.
func UUIDEqualFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEqualFold(FieldUUID, v))
}

// UUIDContainsFold applies the ContainsFold predicate on the "uuid" field.
func UUIDContainsFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContainsFold(FieldUUID, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotNull(FieldDeletedAt))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContainsFold(FieldName, v))
}

// SidEQ applies the EQ predicate on the "sid" field.
func SidEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldSid, v))
}

// SidNEQ applies the NEQ predicate on the "sid" field.
func SidNEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldSid, v))
}

// SidIn applies the In predicate on the "sid" field.
func SidIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldSid, vs...))
}

// SidNotIn applies the NotIn predicate on the "sid" field.
func SidNotIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldSid, vs...))
}

// SidGT applies the GT predicate on the "sid" field.
func SidGT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldSid, v))
}

// SidGTE applies the GTE predicate on the "sid" field.
func SidGTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldSid, v))
}

// SidLT applies the LT predicate on the "sid" field.
func SidLT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldSid, v))
}

// SidLTE applies the LTE predicate on the "sid" field.
func SidLTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldSid, v))
}

// SidContains applies the Contains predicate on the "sid" field.
func SidContains(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContains(FieldSid, v))
}

// SidHasPrefix applies the HasPrefix predicate on the "sid" field.
func SidHasPrefix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasPrefix(FieldSid, v))
}

// SidHasSuffix applies the HasSuffix predicate on the "sid" field.
func SidHasSuffix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasSuffix(FieldSid, v))
}

// SidEqualFold applies the EqualFold predicate on the "sid" field.
func SidEqualFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEqualFold(FieldSid, v))
}

// SidContainsFold applies the ContainsFold predicate on the "sid" field.
func SidContainsFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContainsFold(FieldSid, v))
}

// EgressIDEQ applies the EQ predicate on the "egress_id" field.
func EgressIDEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldEgressID, v))
}

// EgressIDNEQ applies the NEQ predicate on the "egress_id" field.
func EgressIDNEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldEgressID, v))
}

// EgressIDIn applies the In predicate on the "egress_id" field.
func EgressIDIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldEgressID, vs...))
}

// EgressIDNotIn applies the NotIn predicate on the "egress_id" field.
func EgressIDNotIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldEgressID, vs...))
}

// EgressIDGT applies the GT predicate on the "egress_id" field.
func EgressIDGT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldEgressID, v))
}

// EgressIDGTE applies the GTE predicate on the "egress_id" field.
func EgressIDGTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldEgressID, v))
}

// EgressIDLT applies the LT predicate on the "egress_id" field.
func EgressIDLT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldEgressID, v))
}

// EgressIDLTE applies the LTE predicate on the "egress_id" field.
func EgressIDLTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldEgressID, v))
}

// EgressIDContains applies the Contains predicate on the "egress_id" field.
func EgressIDContains(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContains(FieldEgressID, v))
}

// EgressIDHasPrefix applies the HasPrefix predicate on the "egress_id" field.
func EgressIDHasPrefix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasPrefix(FieldEgressID, v))
}

// EgressIDHasSuffix applies the HasSuffix predicate on the "egress_id" field.
func EgressIDHasSuffix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasSuffix(FieldEgressID, v))
}

// EgressIDEqualFold applies the EqualFold predicate on the "egress_id" field.
func EgressIDEqualFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEqualFold(FieldEgressID, v))
}

// EgressIDContainsFold applies the ContainsFold predicate on the "egress_id" field.
func EgressIDContainsFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContainsFold(FieldEgressID, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "status" field.
func StatusIsNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "status" field.
func StatusNotNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotNull(FieldStatus))
}

// PlatformEQ applies the EQ predicate on the "platform" field.
func PlatformEQ(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldPlatform, v))
}

// PlatformNEQ applies the NEQ predicate on the "platform" field.
func PlatformNEQ(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldPlatform, v))
}

// PlatformIn applies the In predicate on the "platform" field.
func PlatformIn(vs ...uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldPlatform, vs...))
}

// PlatformNotIn applies the NotIn predicate on the "platform" field.
func PlatformNotIn(vs ...uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldPlatform, vs...))
}

// PlatformGT applies the GT predicate on the "platform" field.
func PlatformGT(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldPlatform, v))
}

// PlatformGTE applies the GTE predicate on the "platform" field.
func PlatformGTE(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldPlatform, v))
}

// PlatformLT applies the LT predicate on the "platform" field.
func PlatformLT(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldPlatform, v))
}

// PlatformLTE applies the LTE predicate on the "platform" field.
func PlatformLTE(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldPlatform, v))
}

// PlatformIsNil applies the IsNil predicate on the "platform" field.
func PlatformIsNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIsNull(FieldPlatform))
}

// PlatformNotNil applies the NotNil predicate on the "platform" field.
func PlatformNotNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotNull(FieldPlatform))
}

// VodTypeEQ applies the EQ predicate on the "vod_type" field.
func VodTypeEQ(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldVodType, v))
}

// VodTypeNEQ applies the NEQ predicate on the "vod_type" field.
func VodTypeNEQ(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldVodType, v))
}

// VodTypeIn applies the In predicate on the "vod_type" field.
func VodTypeIn(vs ...uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldVodType, vs...))
}

// VodTypeNotIn applies the NotIn predicate on the "vod_type" field.
func VodTypeNotIn(vs ...uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldVodType, vs...))
}

// VodTypeGT applies the GT predicate on the "vod_type" field.
func VodTypeGT(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldVodType, v))
}

// VodTypeGTE applies the GTE predicate on the "vod_type" field.
func VodTypeGTE(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldVodType, v))
}

// VodTypeLT applies the LT predicate on the "vod_type" field.
func VodTypeLT(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldVodType, v))
}

// VodTypeLTE applies the LTE predicate on the "vod_type" field.
func VodTypeLTE(v uint8) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldVodType, v))
}

// VodTypeIsNil applies the IsNil predicate on the "vod_type" field.
func VodTypeIsNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIsNull(FieldVodType))
}

// VodTypeNotNil applies the NotNil predicate on the "vod_type" field.
func VodTypeNotNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotNull(FieldVodType))
}

// VodPathEQ applies the EQ predicate on the "vod_path" field.
func VodPathEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldVodPath, v))
}

// VodPathNEQ applies the NEQ predicate on the "vod_path" field.
func VodPathNEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldVodPath, v))
}

// VodPathIn applies the In predicate on the "vod_path" field.
func VodPathIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldVodPath, vs...))
}

// VodPathNotIn applies the NotIn predicate on the "vod_path" field.
func VodPathNotIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldVodPath, vs...))
}

// VodPathGT applies the GT predicate on the "vod_path" field.
func VodPathGT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldVodPath, v))
}

// VodPathGTE applies the GTE predicate on the "vod_path" field.
func VodPathGTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldVodPath, v))
}

// VodPathLT applies the LT predicate on the "vod_path" field.
func VodPathLT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldVodPath, v))
}

// VodPathLTE applies the LTE predicate on the "vod_path" field.
func VodPathLTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldVodPath, v))
}

// VodPathContains applies the Contains predicate on the "vod_path" field.
func VodPathContains(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContains(FieldVodPath, v))
}

// VodPathHasPrefix applies the HasPrefix predicate on the "vod_path" field.
func VodPathHasPrefix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasPrefix(FieldVodPath, v))
}

// VodPathHasSuffix applies the HasSuffix predicate on the "vod_path" field.
func VodPathHasSuffix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasSuffix(FieldVodPath, v))
}

// VodPathIsNil applies the IsNil predicate on the "vod_path" field.
func VodPathIsNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIsNull(FieldVodPath))
}

// VodPathNotNil applies the NotNil predicate on the "vod_path" field.
func VodPathNotNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotNull(FieldVodPath))
}

// VodPathEqualFold applies the EqualFold predicate on the "vod_path" field.
func VodPathEqualFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEqualFold(FieldVodPath, v))
}

// VodPathContainsFold applies the ContainsFold predicate on the "vod_path" field.
func VodPathContainsFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContainsFold(FieldVodPath, v))
}

// VodURLEQ applies the EQ predicate on the "vod_url" field.
func VodURLEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldVodURL, v))
}

// VodURLNEQ applies the NEQ predicate on the "vod_url" field.
func VodURLNEQ(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldVodURL, v))
}

// VodURLIn applies the In predicate on the "vod_url" field.
func VodURLIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldVodURL, vs...))
}

// VodURLNotIn applies the NotIn predicate on the "vod_url" field.
func VodURLNotIn(vs ...string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldVodURL, vs...))
}

// VodURLGT applies the GT predicate on the "vod_url" field.
func VodURLGT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldVodURL, v))
}

// VodURLGTE applies the GTE predicate on the "vod_url" field.
func VodURLGTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldVodURL, v))
}

// VodURLLT applies the LT predicate on the "vod_url" field.
func VodURLLT(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldVodURL, v))
}

// VodURLLTE applies the LTE predicate on the "vod_url" field.
func VodURLLTE(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldVodURL, v))
}

// VodURLContains applies the Contains predicate on the "vod_url" field.
func VodURLContains(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContains(FieldVodURL, v))
}

// VodURLHasPrefix applies the HasPrefix predicate on the "vod_url" field.
func VodURLHasPrefix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasPrefix(FieldVodURL, v))
}

// VodURLHasSuffix applies the HasSuffix predicate on the "vod_url" field.
func VodURLHasSuffix(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldHasSuffix(FieldVodURL, v))
}

// VodURLIsNil applies the IsNil predicate on the "vod_url" field.
func VodURLIsNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIsNull(FieldVodURL))
}

// VodURLNotNil applies the NotNil predicate on the "vod_url" field.
func VodURLNotNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotNull(FieldVodURL))
}

// VodURLEqualFold applies the EqualFold predicate on the "vod_url" field.
func VodURLEqualFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEqualFold(FieldVodURL, v))
}

// VodURLContainsFold applies the ContainsFold predicate on the "vod_url" field.
func VodURLContainsFold(v string) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldContainsFold(FieldVodURL, v))
}

// StartTimeEQ applies the EQ predicate on the "start_time" field.
func StartTimeEQ(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldStartTime, v))
}

// StartTimeNEQ applies the NEQ predicate on the "start_time" field.
func StartTimeNEQ(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldStartTime, v))
}

// StartTimeIn applies the In predicate on the "start_time" field.
func StartTimeIn(vs ...time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldStartTime, vs...))
}

// StartTimeNotIn applies the NotIn predicate on the "start_time" field.
func StartTimeNotIn(vs ...time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldStartTime, vs...))
}

// StartTimeGT applies the GT predicate on the "start_time" field.
func StartTimeGT(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldStartTime, v))
}

// StartTimeGTE applies the GTE predicate on the "start_time" field.
func StartTimeGTE(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldStartTime, v))
}

// StartTimeLT applies the LT predicate on the "start_time" field.
func StartTimeLT(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldStartTime, v))
}

// StartTimeLTE applies the LTE predicate on the "start_time" field.
func StartTimeLTE(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldStartTime, v))
}

// StartTimeIsNil applies the IsNil predicate on the "start_time" field.
func StartTimeIsNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIsNull(FieldStartTime))
}

// StartTimeNotNil applies the NotNil predicate on the "start_time" field.
func StartTimeNotNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotNull(FieldStartTime))
}

// CompleteTimeEQ applies the EQ predicate on the "complete_time" field.
func CompleteTimeEQ(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldCompleteTime, v))
}

// CompleteTimeNEQ applies the NEQ predicate on the "complete_time" field.
func CompleteTimeNEQ(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldCompleteTime, v))
}

// CompleteTimeIn applies the In predicate on the "complete_time" field.
func CompleteTimeIn(vs ...time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldCompleteTime, vs...))
}

// CompleteTimeNotIn applies the NotIn predicate on the "complete_time" field.
func CompleteTimeNotIn(vs ...time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldCompleteTime, vs...))
}

// CompleteTimeGT applies the GT predicate on the "complete_time" field.
func CompleteTimeGT(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldCompleteTime, v))
}

// CompleteTimeGTE applies the GTE predicate on the "complete_time" field.
func CompleteTimeGTE(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldCompleteTime, v))
}

// CompleteTimeLT applies the LT predicate on the "complete_time" field.
func CompleteTimeLT(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldCompleteTime, v))
}

// CompleteTimeLTE applies the LTE predicate on the "complete_time" field.
func CompleteTimeLTE(v time.Time) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldCompleteTime, v))
}

// CompleteTimeIsNil applies the IsNil predicate on the "complete_time" field.
func CompleteTimeIsNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIsNull(FieldCompleteTime))
}

// CompleteTimeNotNil applies the NotNil predicate on the "complete_time" field.
func CompleteTimeNotNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotNull(FieldCompleteTime))
}

// DurationEQ applies the EQ predicate on the "duration" field.
func DurationEQ(v uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldEQ(FieldDuration, v))
}

// DurationNEQ applies the NEQ predicate on the "duration" field.
func DurationNEQ(v uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNEQ(FieldDuration, v))
}

// DurationIn applies the In predicate on the "duration" field.
func DurationIn(vs ...uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIn(FieldDuration, vs...))
}

// DurationNotIn applies the NotIn predicate on the "duration" field.
func DurationNotIn(vs ...uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotIn(FieldDuration, vs...))
}

// DurationGT applies the GT predicate on the "duration" field.
func DurationGT(v uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGT(FieldDuration, v))
}

// DurationGTE applies the GTE predicate on the "duration" field.
func DurationGTE(v uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldGTE(FieldDuration, v))
}

// DurationLT applies the LT predicate on the "duration" field.
func DurationLT(v uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLT(FieldDuration, v))
}

// DurationLTE applies the LTE predicate on the "duration" field.
func DurationLTE(v uint64) predicate.RoomVod {
	return predicate.RoomVod(sql.FieldLTE(FieldDuration, v))
}

// DurationIsNil applies the IsNil predicate on the "duration" field.
func DurationIsNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldIsNull(FieldDuration))
}

// DurationNotNil applies the NotNil predicate on the "duration" field.
func DurationNotNil() predicate.RoomVod {
	return predicate.RoomVod(sql.FieldNotNull(FieldDuration))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.RoomVod) predicate.RoomVod {
	return predicate.RoomVod(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.RoomVod) predicate.RoomVod {
	return predicate.RoomVod(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.RoomVod) predicate.RoomVod {
	return predicate.RoomVod(func(s *sql.Selector) {
		p(s.Not())
	})
}
